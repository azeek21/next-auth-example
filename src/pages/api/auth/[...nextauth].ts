import NextAuth from "next-auth/next"
import GitHubProvider from "next-auth/providers/github"

// import mongodb adapter and client promise.
import { MongoDBAdapter } from "@next-auth/mongodb-adapter";
import clientPromise from "@/lib/mongodb";
import { User } from "next-auth";
import { JWT } from "next-auth/jwt";

console.log(process.env.GITHUB_SECRET);

export default NextAuth({
    // auth providers like github, google, apple
    providers: [
        GitHubProvider({
            // you get these below from github read more on readme of this repo
            clientId: process.env.GITHUB_ID || "",
            clientSecret: process.env.GITHUB_SECRET || "",
        }),
    ],
    // add adapeter
    adapter: MongoDBAdapter(clientPromise),
    session: {
        strategy: "jwt",
    },
    jwt: {
        secret: "turieokdmfjghutridfkjguirodkcvjg;fe"
    },
    callbacks: {
        async jwt({token, user}) {
            // user comes from auth provider which is github in our case
            // token generated by next auth so we need get id of user from 
            // user object we got from github and add it token
            if (user) {
                token.id = user.id
            };
            return token;
        },
        // tis function generates session which will be supplied to end user (us or browser)
        // it receives session (generated by nextauth) and toke returned by abowe jwt function
        // so we can parse the id from toke we supplied earlier and add it to session
        // now session is ready to be issued to end user (whoever asked for user session)
        async session({session, token}) {
            if (session.user) {
                const s = {...session, id: token.id}
                return s;
            }
            return session;
        }
    }
})
